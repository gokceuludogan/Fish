package server;

import file.SharedFile;
import java.io.Serializable;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 * Description of the ResultList class.<br> Result list is a way to represent DB
 * queries results to make it easier for processing.
 *
 */
public class ResultList implements Serializable {

    private transient ResultSet s;
    List<SharedFile> list = new ArrayList<SharedFile>();

    /**
     * @param resultSet The ResultSet generated by executing a Database query
     * that needs to be transformed in a ResultList.
     * @throws java.sql.SQLException
     */
    public ResultList(ResultSet resultSet) throws SQLException {
        this.s = resultSet;
        execute();
    }

    private List execute() throws SQLException {
        while (s.next()) { // process results one row at a time.
            int ID = s.getInt("ID");
            String fileName = s.getString("FILENAME");
            String extension = s.getString("EXTENSION");
            int size = s.getInt("SIZE");
            String owner = s.getString("OWNER");
            SharedFile sharedFile = new SharedFile(ID, fileName, extension, size, owner);
            list.add(sharedFile);
        }
        return list;
    }

    /**
     * This method returns an object of type SharedFile. If no ShaaredFile
     * exists for that index then the method returns null.
     *
     * @param index
     * @return SharedFile - The SharedFile of index given, null if does not
     * exist.
     */
    public SharedFile get(int index) {
        return list.get(index);
    }
    /**
     * This method deletes the object with the given index
     * @param index
     * @return the removed list 
     */
    public SharedFile delete(int index){
        return list.remove(index);
    }

    /**
     * This method returns the size of a ResultList. If no Size value exists for
     * that ResultList it returns null.
     *
     * @return size - The size of the ResultList (e.g. 5), null if does not
     * exist.
     */
    public int size() {
        int size = list.size();
        return size;
    }
}